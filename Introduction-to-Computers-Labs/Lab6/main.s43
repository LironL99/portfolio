#include  "bsp.h"

             NAME   MAIN
             PUBLIC state,flag,flag2,main,NewSample,Vmax1_8,CountIn1_8,Vavg,oldVavg
             PUBLIC IntPendReg,Vmax_3,Vmin_3
             EXTERN SysConfig,delay
             EXTERN PrintPB0,WaveDefine,PrintVavg,FindVAVG,FindVmin_max            
;-------------------------------------------------------------------------------
             ORG      DataSegStart         ; Begins a DATA segment
             
state        DW      0                      ; state variable
flag         DW      0 
flag2        DW      0 
NewSample    DW      0
Vmax1_8      DW      0
CountIn1_8   DW      0
Vavg         DL      0
oldVavg      DL      0
IntPendReg   DW      0
tesT         DW      0
Vmax_3       DW      0
Vmin_3       DW      0
;-------------------------------------------------------------------------------          
       ;RSEG    CSTACK    ; shows to compiler where is the RAM populating limit
                          ; can be ignored
;-------------------------------------------------------------------------------
             ORG     CodeSegStart      ; Program Reset = Begins a CODE segment
             
main         mov.w   #StackTosStart,SP ; Initialize stack pointer to the RAM end 
             call    #SysConfig        ; ADC, GPIO, TIMER
             clr     state             ; set to idle state at the beginning
;---------------------- FSM_loop -------------------------------------

state0       cmp     #0x00,state         ;check if state0           
             jnz     state1
             bis.w   #CPUOFF+GIE,SR 

state1       cmp     #0x01,state         ;check if state1
             jnz     state2      
             call    #WaveDefine
                       
state2       cmp     #0x02,state         ;check if state2
             jnz     state3
             call    #FindVAVG  
             
state3       cmp     #0x04,state         ;check if state2
             jnz     state0
             call    #FindVmin_max             

             jmp     state0       
                 
             END
